// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nebula.CI.Services.PipelineHistory;
using Volo.Abp.EntityFrameworkCore;

namespace Nebula.CI.Services.PipelineHistory.EFCore.DbMigrations.Migrations
{
    [DbContext(typeof(PipelineHistoryDbMigrationsContext))]
    [Migration("20201006114447_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Nebula.CI.Services.PipelineHistory.PipelineHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnName("ConcurrencyStamp")
                        .HasColumnType("varchar(40) CHARACTER SET utf8mb4")
                        .HasMaxLength(40);

                    b.Property<string>("Diagram")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ExtraProperties")
                        .HasColumnName("ExtraProperties")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("PipelineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PipelineHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
